package no.site.vaccoin.main;

import java.util.ArrayList;

import com.google.gson.*;

public class Vacchain {
	
	public static ArrayList<Block> blockchain = new ArrayList<Block>();

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		blockchain.add(new Block("There is some data for our block", "0")); 
		System.out.println("Hash for block "+blockchain.size()+" : "+blockchain.get(blockchain.size()-1).hash);
		System.out.println("prevHash for block "+blockchain.size()+" : "+blockchain.get(blockchain.size()-1).previousHash);
		
		blockchain.add(new Block("There is some data for our SECOND block", blockchain.get(blockchain.size()-1).hash));
		System.out.println("Hash for block "+blockchain.size()+" : "+blockchain.get(blockchain.size()-1).hash);
		System.out.println("prevHash for block "+blockchain.size()+" : "+blockchain.get(blockchain.size()-1).previousHash);
		
		blockchain.add(new Block("There is some data for our THIRD block", blockchain.get(blockchain.size()-1).hash));
		System.out.println("Hash for block "+blockchain.size()+" : "+blockchain.get(blockchain.size()-1).hash);
		System.out.println("prevHash for block "+blockchain.size()+" : "+blockchain.get(blockchain.size()-1).previousHash);
		
		
		String blockchainJson = new GsonBuilder().create().toJson(blockchain);		
		System.out.println(blockchainJson);
	}
	
	public static boolean isChainValid() {
		Block currentBlock; 
		Block previousBlock;
		
		for (int i = 1; i < blockchain.size(); i++) {
			currentBlock = blockchain.get(i);
			previousBlock = blockchain.get(i-1);
			
			if (!currentBlock.previousHash.equals(previousBlock.hash)) return false;
			
			if (!currentBlock.hash.equals(currentBlock.calculateHash())) return false;
		}
		return true;
	}
}
